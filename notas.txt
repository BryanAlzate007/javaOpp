atributos son las caractaristicas a los objetos sustantivos


los objetos tienen comportamientos operaciones y acciones que pueden ser agregadas
estos comportamientos siempre son verbos 
ejem.
login()
logout()


Clases 
Son los modelos sobre los cuales contruiremos los objetos 
abstaccion  analizar objeto para generar molde 

cada clase debe de tener su archivo independiente
pude exister clases en un mismo archivo son clases anidadas 

UML
 _________
|Person   |
|_________|
|name     |
|_________|
|walk()   |
|_________|


Modularidad
dividir sistemas en subsistemas 
+ Reutilizar
+ Evitar colapsos
+ Mantenible
+ Legibilidad
+ Resolución rapida de problemas

para inicializar un objeto vasta con poner el nombre del objeto = new objecto();

ejem.

myDoctor = new Doctor();


el metodo constructor es el nombre despues de la palabra reservada new 
ejem.
Doctor();
se genera un medotodo nuevo este nos ayuda a crear nuevas instancias debe de tener el mismo nombre de la clase de la cual se esta inicializando 
puede tener 0 o mas argumentos dentro del parentecis 

  Doctor                    myDoctor;
    |                          |
tipo de objecto        Nombre del objecto


Declarando e instanciando un objeto

Doctor myDoctor = new Doctor();
        |               |
 Declarando el     inicializando/
    objeto          Creando el objeto


Accesando a metodos 

Math.PI 

Costantes:

para declarar una variable constante en java se requiere la palaba reservada "Final" casi siempre se ve en static 

Sobre carga:
se puede cargar un metodo de nuevo con valiables diferentes o mayor cantidad de variables.



sobrecarga de constructores 

se inicializa el contructor enviando un parametro especifico de contruccion

new contructor(name , lastName);


public       clase package subclase otros
protected    clase package subclase
default      clase package
private      clase

encapsulamiento de datos sirve para evitar que los atributos sean modificados por fuera de la clase 



Getters y Setters
leer/escribir especificamente los valores de las variables miembro con esto se agrega valor a las variables privadas y se le asignan caracteristicas a cada variable restricciones
y condiciones 

Clases Wrapper/ Objeto primitivo

    Byte
    Short
    Integer
    Long 
    Float
    Double
    Character
    Boolean
    String


Variables vs objetos

Stack memoria 
variables primitivas se guarda el valor de la variable i = "0" solo se guarda en memoria el 0

para los objetos se guarda la direccion de memoria donde se estan guardando los datos en el espacio de memoria heap se gusardan los datos de cada variable dentro de cada objeto 


Clases anidadas
clases helper
agrupada por logica
encapsuladas

Clases estaticas anidadas 
no se necesitan crear instancias para llamarlas.
Solo se pueden llamar a los métodos estaticos.